
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qdxpxqdewqrbvlsajeeo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFkeHB4cWRld3FyYnZsc2FqZWVvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc2NzM0MDMsImV4cCI6MjA1MzI0OTQwM30.-wnDf1hMWOow3O1kbcTfC3mw59h-5SsmdFGhp5bKgUE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Utility function to get proxy URL by ID
export const getProxyUrlById = async (proxyId: string): Promise<string | null> => {
  if (!proxyId) return null;
  
  const { data, error } = await supabase
    .from('proxies')
    .select('address, port, username, password')
    .eq('id', proxyId)
    .single();
    
  if (error || !data) {
    console.error('Error fetching proxy:', error);
    return null;
  }
  
  // Format: address:port:username:password or address:port
  if (data.username && data.password) {
    return `${data.address}:${data.port}:${data.username}:${data.password}`;
  }
  
  return `${data.address}:${data.port}`;
};
